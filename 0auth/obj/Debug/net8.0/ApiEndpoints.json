[
  {
    "ContainingType": "_0auth.Controllers.AuthController",
    "Method": "Get",
    "RelativePath": "api/Auth/{login}, {password}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "login",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "password",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "_0auth.Model.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "_0auth.Controllers.AuthController",
    "Method": "GetCurrentUser",
    "RelativePath": "api/Auth/current",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "_0auth.Model.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "_0auth.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/registration",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userDTO",
        "Type": "_0auth.DTO.UserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "_0auth.Model.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "_0auth.Controllers.AuthController",
    "Method": "UpdateUser",
    "RelativePath": "api/Auth/UpdateUser",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updatedUser",
        "Type": "_0auth.DTO.UserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "_0auth.Controllers.ProductsController",
    "Method": "GetProducts",
    "RelativePath": "API/Products",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[_0auth.Model.Product, 0auth, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "_0auth.Controllers.ProductsController",
    "Method": "AddProduct",
    "RelativePath": "API/Products",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newProduct",
        "Type": "_0auth.Model.Product",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "_0auth.Model.Product",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "_0auth.Controllers.ProductsController",
    "Method": "GetManufacturers",
    "RelativePath": "API/Products/Manufacturers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[_0auth.Model.Manufacturer, 0auth, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "_0auth.Controllers.ProductsController",
    "Method": "GetProductTypes",
    "RelativePath": "API/Products/ProductsTypes",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[_0auth.Model.ProductType, 0auth, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "_0auth.Controllers.ProductsController",
    "Method": "GetSuppliers",
    "RelativePath": "API/Products/Suppliers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[_0auth.Model.Supplier, 0auth, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "_0auth.Controllers.ProductsController",
    "Method": "UpdateProduct",
    "RelativePath": "API/Products/UpdateProduct",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updatedProduct",
        "Type": "_0auth.Model.Product",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "_0auth.Controllers.TradeController",
    "Method": "Get",
    "RelativePath": "api/Trade",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "_0auth.Controllers.TradeController",
    "Method": "Post",
    "RelativePath": "api/Trade",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "value",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "_0auth.Controllers.TradeController",
    "Method": "Get",
    "RelativePath": "api/Trade/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "_0auth.Controllers.TradeController",
    "Method": "Put",
    "RelativePath": "api/Trade/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "value",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "_0auth.Controllers.TradeController",
    "Method": "Delete",
    "RelativePath": "api/Trade/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "_0auth.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[_0auth.WeatherForecast, 0auth, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]